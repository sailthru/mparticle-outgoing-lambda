version: 2.1

orbs:
  jvm: sailthru/jvm@0.4.0
  deploy: sailthru/deploy@0.8.0

parameters:
  artifact_name:
    description: Project name, used to find the final executable and the S3 folder
    type: string
    default: mparticle-outgoing-lambda

  lambda_name:
    description: Name of the Lambda.
    type: string
    default: mparticle_outgoing_sqs_message_processor

  java_version:
    description: String version of Java this project depends on.
    type: string
    default: "21"

  deploy_stage:
    description: Flag indicating a stage deployment
    type: boolean
    default: false


executors:
  test_containers:
    parameters:
      java_version:
        type: string
    docker:
      - image: cimg/openjdk:<< parameters.java_version >>
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_PASSWORD


references:
  filter_branch_only: &filter_branch_only
    branches:
      only: /.*/
    tags:
      ignore: /.*/

  filter_main_only: &filter_main_only
    branches:
      only:
        - main
    tags:
      ignore: /.*/

  filter_tag_only: &filter_tag_only
    branches:
      ignore: /.*/
    tags:
      only: /^v\d+$/


workflows:
  version: 2
  build:
    unless: << pipeline.parameters.deploy_stage >>
    jobs:
      - deploy/notify_start:
          name: Start notification
          filters: *filter_main_only
          context:
            - Slack Notifications
      - jvm/test:
          name: test
          filters: *filter_branch_only
          context:
            - Docker Hub
          executor:
            name: test_containers
            java_version: << pipeline.parameters.java_version >>
          resource_class: medium
      - jvm/publish_lambda:
          name: publish
          filters: *filter_branch_only
          context:
            - Docker Hub
          requires:
            - test
          executor:
            name: jvm/default
            tag: << pipeline.parameters.java_version >>
          artifact_name: << pipeline.parameters.artifact_name >>
          version: $CIRCLE_SHA1
      - deploy/deploy_lambda:
          name: deploy_stage
          context:
            - Slack Notifications
            - Kubernetes Stage     # to notify the right Slack channel
            - AWS S3 Lambda Stage
          artifact_name: << pipeline.parameters.artifact_name >>
          lambda_name: << pipeline.parameters.lambda_name >>
          version: $CIRCLE_SHA1
      - deploy/notify_hold:
          name: Notify release approval
          filters: *filter_main_only
          context:
            - Slack Notifications
          requires:
            - deploy_stage
      - release_hold:
          name: Approval to prod
          filters: *filter_main_only
          type: approval
          requires:
            - Notify release approval
      - deploy/create_release_tag:
          name: Create release
          filters: *filter_main_only
          context:
            - Github
          requires:
            - Approval to prod

  deploy_stage:
    when: << pipeline.parameters.deploy_stage >>
    jobs:
      - deploy/deploy_lambda:
          name: deploy_stage
          context:
            - Slack Notifications
            - AWS S3 Lambda Stage
          artifact_name: << pipeline.parameters.artifact_name >>
          lambda_name: << pipeline.parameters.lambda_name >>
          version: $CIRCLE_SHA1

  deploy_prod:
    jobs:
      - deploy/create_lambda_release:
          name: create_lambda_release
          filters: *filter_tag_only
          artifact_name: << pipeline.parameters.artifact_name >>
      - deploy/deploy_lambda:
          name: deploy_prod
          filters: *filter_tag_only
          context:
            - Slack Notifications
            - AWS S3 Lambda Prod
          requires:
            - create_lambda_release
          artifact_name: << pipeline.parameters.artifact_name >>
          lambda_name: << pipeline.parameters.lambda_name >>
          version: $CIRCLE_TAG
